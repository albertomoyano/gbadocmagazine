' Gambas module file

Private ContenidoAut As Result
Private arrControlNames As String[] = [
  "idAutor",
  "idArticuloAutor",
  "txtAutorNombre",
  "txtAutorApellido",
  "txtAutorNombreCompleto",
  "txtNombreNormalizado",
  "cmbGenero",
  "txtAutorOrcid",
  "txtAutorEmail",
  "txtAutorAfiliacion",
  "txtAutorafiliacionId",
  "txtAutorDepartamento",
  "txtAutorFacultad",
  "txtAutorCiudad",
  "txtAutorPais",
  "txtAutorPaisCodigo",
  "txtAutorCodigoPostal",
  "txtAutorRorId",
  "txtAutorInstitucionTipo",
  "txtAutorCorrespondencia",
  "txtAutorBbiografia"
]

Public Sub ObtenerIdNuevoAutor()

  If FMain.ComboBoxArticuloAsociado.Text = "" Then
    Message.Info("No hay artículos disponibles para asignar autores.")
    Return
  Endif

  Dim Idn As Integer
  Dim MaxId As Variant

  MaxId = m_OnOff_y_Red.meConn.Exec("SELECT MAX(id) FROM autores LIMIT 1")

  If MaxId["MAX(id)"] = Null Then
    Idn = 0
  Else
    Idn = CInt(MaxId["MAX(id)"]) + 1
  Endif

  FMain.idAutor.Text = Idn
  FMain.idArticuloAutor.Text = FMain.idArticulo.Text

End

Public Sub ConfigurarTableViewAutores(grid As GridView)

  With grid
    .Header = True
    .Grid = True
    .Columns.Count = 12

    ' Configuración de columnas
    For i As Integer = 0 To 11
      Select Case i
        Case 5
          .Columns[i].Title = "Nombre normalizado"
          .Columns[i].Width = 900
        Case Else
          .Columns[i].Title = ""
          .Columns[i].Width = 0
      End Select
    Next
  End With

End

Public Sub MostrarMetadatosEnTableViewAutores(iRow As Integer)

  With FMain
    .idAutor.Text = .gbMetadatosAutores[iRow, 0].Text
    .idArticuloAutor.Text = .gbMetadatosAutores[iRow, 1].Text
    .txtAutorNombre.Text = .gbMetadatosAutores[iRow, 2].Text
    .txtAutorApellido.Text = .gbMetadatosAutores[iRow, 3].Text
    .txtAutorNombreCompleto.Text = .gbMetadatosAutores[iRow, 4].Text
    .txtNombreNormalizado.Text = .gbMetadatosAutores[iRow, 5].Text
    .cmbGenero.Text = .gbMetadatosAutores[iRow, 6].Text
    .txtAutorOrcid.Text = .gbMetadatosAutores[iRow, 7].Text
    .txtAutorEmail.Text = .gbMetadatosAutores[iRow, 8].Text
    .txtAutorAfiliacion.Text = .gbMetadatosAutores[iRow, 9].Text
    .txtAutorafiliacionId.Text = .gbMetadatosAutores[iRow, 10].Text
    .txtAutorDepartamento.Text = .gbMetadatosAutores[iRow, 11].Text
    .txtAutorFacultad.Text = .gbMetadatosAutores[iRow, 12].Text
    .txtAutorCiudad.Text = .gbMetadatosAutores[iRow, 13].Text
    .txtAutorPais.Text = .gbMetadatosAutores[iRow, 14].Text
    .txtAutorPaisCodigo.Text = .gbMetadatosAutores[iRow, 15].Text
    .txtAutorCodigoPostal.Text = .gbMetadatosAutores[iRow, 16].Text
    .txtAutorRorId.Text = .gbMetadatosAutores[iRow, 17].Text
    .txtAutorInstitucionTipo.Text = .gbMetadatosAutores[iRow, 18].Text
    .txtAutorCorrespondencia.Text = .gbMetadatosAutores[iRow, 19].Text
    .txtAutorBbiografia.Text = .gbMetadatosAutores[iRow, 20].Text
  End With

End

Public Sub RefrescarTableViewAutores()

  FMain.gbMetadatosAutores.Clear

  Dim rAutores As Result
  Dim iRow As Integer
  Dim iCol As Integer

  rAutores = m_OnOff_y_Red.meConn.Exec("SELECT * FROM autores WHERE id_articulo = &1", FMain.idArticuloAutor.Text)
  If rAutores = Null Or rAutores.Count = 0 Then Return

  FMain.gbMetadatosAutores.Columns.Count = rAutores.Fields.Count
  FMain.gbMetadatosAutores.Rows.Count = rAutores.Count

  ' Poblar los datos del resultado en el GridView
  iRow = 0
  For Each rAutores
    For iCol = 0 To rAutores.Fields.Count - 1
      ' Acceso directo por índice con manejo de NULL
      If IsNull(rAutores[iCol]) Then
        FMain.gbMetadatosAutores[iRow, iCol].Text = ""
      Else
        FMain.gbMetadatosAutores[iRow, iCol].Text = rAutores[iCol]
      Endif
    Next
    iRow += 1
  Next

  FMain.gbMetadatosAutores.Refresh

End

Public Sub MostrarAutoresEnMetadatosArticulos(iRow As Integer)

  Dim i As Integer
  Dim oControl As Object
  Dim sControlName As String

  For i = 0 To FMain.gbMetadatosAutores.Columns.Max
    If i < arrControlNames.Count Then
      sControlName = arrControlNames[i]
      oControl = FMain[sControlName]
      If oControl Then
        oControl.Text = FMain.gbMetadatosAutores[iRow, i].Text
      End If
    End If
  Next

End

Public Sub LimpiarTextboxAutores()

  Dim oControl As Object

  For Each sControlName As String In arrControlNames
    oControl = FMain[sControlName]
    If oControl Then
      oControl.Text = ""
    End If
  Next

End

Public Sub GuardarCamposAutores()

  ContenidoAut!id = FMain.idAutor.Text
  ContenidoAut!id_articulo = FMain.idArticuloAutor.Text
  ContenidoAut!id = FMain.txtAutorNombre.Text
  ContenidoAut!id = FMain.txtAutorApellido.Text
  ContenidoAut!id = FMain.txtAutorNombreCompleto.Text
  ContenidoAut!id = FMain.txtNombreNormalizado.Text
  ContenidoAut!id = FMain.cmbGenero.Text
  ContenidoAut!id = FMain.txtAutorOrcid.Text
  ContenidoAut!id = FMain.txtAutorEmail.Text
  ContenidoAut!id = FMain.txtAutorAfiliacion.Text
  ContenidoAut!id = FMain.txtAutorafiliacionId.Text
  ContenidoAut!id = FMain.txtAutorDepartamento.Text
  ContenidoAut!id = FMain.txtAutorFacultad.Text
  ContenidoAut!id = FMain.txtAutorCiudad.Text
  ContenidoAut!id = FMain.txtAutorPais.Text
  ContenidoAut!id = FMain.txtAutorPaisCodigo.Text
  ContenidoAut!id = FMain.txtAutorCodigoPostal.Text
  ContenidoAut!id = FMain.txtAutorRorId.Text
  ContenidoAut!id = FMain.txtAutorInstitucionTipo.Text
  ContenidoAut!id = FMain.txtAutorCorrespondencia.Text
  ContenidoAut!id = FMain.txtAutorBbiografia.Text

End

Public Sub GuardarAutoresPrimeraVez()

  ContenidoAut = m_OnOff_y_Red.meConn.Create("autores")

  GuardarCamposAutores()
  ContenidoAut.Update
  m_OnOff_y_Red.meConn.Commit()
  RefrescarTableViewAutores()

  Message.Info("La referencia se guardó con éxito.")

Catch
  Message.Error("Error al intentar guardar la entrada: " & Error.Text)

End