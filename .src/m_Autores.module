' Gambas module file

Private ContenidoAut As Result
Private ArticulosIDs As Collection

Public Sub ObtenerIdNuevoAutor()

  If FMain.ComboBoxArticuloAsociado.Text = "" Then
    Message.Info("No hay artículos disponibles para asignar autores.")
    Return
  Endif

  Dim Idn As Integer
  Dim MaxId As Variant

  MaxId = m_OnOff_y_Red.meConn.Exec("SELECT MAX(id) FROM autores LIMIT 1")

  If MaxId["MAX(id)"] = Null Then
    Idn = 0
  Else
    Idn = CInt(MaxId["MAX(id)"]) + 1
  Endif

  FMain.idAutor.Text = Idn

End

Public Sub RefrescarTableViewAAutores()

  FMain.gbMetadatosAutores.Clear
  ContenidoAut = m_OnOff_y_Red.meConn.Exec("SELECT * FROM autores")'
  FMain.gbMetadatosAutores.Rows.Count = ContenidoAut.Count

End

Public Sub LlenarComboBoxArticulos()

  ' Dim rConsulta As Result

  FMain.ComboBoxArticuloAsociado.Clear
  FMain.ComboBoxArticuloAsociadoEnbibtex.Clear
  ArticulosIDs = New Collection

  ContenidoAut = m_OnOff_y_Red.meConn.Exec("SELECT id, txtArticuloTitulo FROM articulos WHERE id_revistas = &1", FMain.idMetadatoRevista.Text)

  If ContenidoAut.Available Then
    Repeat
      Dim titulo As String = ContenidoAut["txtArticuloTitulo"]
      Dim id As Integer = ContenidoAut["id"]

      FMain.ComboBoxArticuloAsociado.Add(titulo)
      FMain.ComboBoxArticuloAsociadoEnbibtex.Add(titulo)
      ArticulosIDs.Add(id, titulo)

      ContenidoAut.MoveNext()
    Until ContenidoAut.Available = False
  Else
    Message.Warning("No hay artículos para mostrar.")
  Endif

Catch
  Message.Error("Error al cargar artículos: " & Error.Text)

End

Public Sub ComboBoxArticuloAsociado()

  Dim tituloSeleccionado As String = FMain.ComboBoxArticuloAsociado.Text

  If ArticulosIDs.Exist(tituloSeleccionado) Then
    FMain.idArticuloAutor.Text = ArticulosIDs[tituloSeleccionado]
  Endif

End
