' Gambas module file

Public iIDProyecto As Integer
Public Contenido As Result

Public Sub CerrarTodo()

  ' Borramos carpetas del caché
  FMain.TerminalViewProyecto.Input("rm -rf " & User.Home & "/.local/share/org.gambas.*" & "\n")
  FMain.TerminalViewProyecto.Input("clear" & "\n")
  Wait 0.2

  ' detiene el proceso Bash
  If FMain.$Bash And If FMain.$Bash.State = Process.Running Then
    FMain.$Bash.Kill
    Wait 0.2
    If FMain.$Bash.State = Process.Running Then
      FMain.$Bash.Terminate
      Wait 0.2
      If FMain.$Bash.State = Process.Running Then
        Message.Warning("El proceso no pudo ser detenido.")
      Endif
    Endif
  Endif

  ' Cierra la conexión a la BBDD si existe
  If m_OnOff_y_Red.meConn Then
    m_OnOff_y_Red.meConn.Close()
    m_OnOff_y_Red.meConn = Null
  Endif

  ' Finalmente cerrar formulario principal y salir de la aplicación
  FMain.Close
  Quit

End

Public Sub DirectorioOcultoApp()

  ' Lista de rutas que necesitas verificar/crear
  Dim rutasNecesarias As String[] = [
    User.Home & "/.gbadoc"

  ]

  ' Verificar y crear rutas si no existen
  For Each rutaDirSys As String In rutasNecesarias
    If Not Exist(rutaDirSys) Then
      Try Mkdir rutaDirSys  ' ← Intenta crear el directorio
      If Error Then
        Message.Error("Error al intentar crear los directorios del sistema.")' Print "Error al crear directorio: " & rutaDirSys & " (" & Error.Text & ")"
      Else
        Print "Directorio creado: " & rutaDirSys
      Endif
    End If
  Next

  ' Verificamos si existe la base de datos
  Dim rutaBD As String = User.Home & "/.gbadoc/gbadoc.sqlite"

  If Not Exist(rutaBD) Then
    Message.Info("La base de datos no existe, se creará una.")
    ' CrearBBDD
    Quit' momentaneamente salimos del programa
  Else
    ' La base existe, continuar normalmente
  Endif

End

' Public Sub CrearBBDD()
'
' End

Public Sub VerificarYAgregarProyecto(sRutaArchivo As String)

  Dim sNombreArchivo As String
  ' Dim Contenido As Result
  Dim sSQL As String

  ' Asegurar conexión activa
  If Not m_OnOff_y_Red.meConn Or If m_OnOff_y_Red.meConn.Opened = False Then
    m_OnOff_y_Red.OnRed()
  Endif

  ' Obtener nombre del archivo sin extensión
  sNombreArchivo = File.BaseName(sRutaArchivo)

  ' Verificar si ya existe
  sSQL = "SELECT id FROM proyectos WHERE nombre_archivo = &1"
  Contenido = m_OnOff_y_Red.meConn.Exec(sSQL, sNombreArchivo)

  If Contenido.Available Then
    Message.Info("El archivo '" & sNombreArchivo & "' ya está registrado.")
  Else
    ' Insertar en proyectos
    sSQL = "INSERT INTO proyectos (nombre_archivo) VALUES (&1)"
    m_OnOff_y_Red.meConn.Exec(sSQL, sNombreArchivo)

    ' Obtener ID del nuevo proyecto
    Contenido = m_OnOff_y_Red.meConn.Exec("SELECT last_insert_rowid() AS ultimo_id")
    If Contenido.Available Then
      iIDProyecto = Contenido["ultimo_id"]

      ' Insertar en metadatos (relación 1 a 1)
      sSQL = "INSERT INTO metadatos (id_proyecto) VALUES (&1)"
      m_OnOff_y_Red.meConn.Exec(sSQL, iIDProyecto)

      Message.Info("Proyecto registrado con metadatos iniciales.")
    Else
      Message.Error("No se pudo obtener el ID del nuevo proyecto.")
    Endif
  Endif

Catch
  Message.Error("Error al registrar el proyecto: " & Error.Text)

End

Public Sub CargarMetadatosDesdeArchivo(sRutaArchivo As String)

  ' Dim Contenido As Result

  Dim sSQL As String

  If Not m_OnOff_y_Red.meConn Or If m_OnOff_y_Red.meConn.Opened = False Then
    m_OnOff_y_Red.OnRed()
  Endif

  Dim sNombreArchivo As String
  sNombreArchivo = File.BaseName(sRutaArchivo)

  ' Buscar el proyecto por nombre
  sSQL = "SELECT id FROM proyectos WHERE nombre_archivo = &1"
  Contenido = m_OnOff_y_Red.meConn.Exec(sSQL, sNombreArchivo)

  If Contenido.Available Then
    iIDProyecto = Contenido["id"]

    ' Ahora buscar los metadatos relacionados
    sSQL = "SELECT * FROM metadatos WHERE id_proyecto = &1"
    Contenido = m_OnOff_y_Red.meConn.Exec(sSQL, iIDProyecto)

    If Contenido.Available Then
      ' Asignar a los TextBox del formulario
      FMain.idMetadato.Text = Contenido["id"]
      FMain.idProyecto.Text = Contenido["id_proyecto"]
      FMain.txtImagenTapita.Text = Contenido["txtImagenTapita"]
      FMain.txtRevistaTitulo.Text = Contenido["txtRevistaTitulo"]
      FMain.txtRevistaAbreviatura.Text = Contenido["txtRevistaAbreviatura"]
      FMain.txtRevistaDOIPrefix.Text = Contenido["txtRevistaDOIPrefix"]
      FMain.txtRevistaISSN.Text = Contenido["txtRevistaISSN"]
      FMain.txtRevistaVolumen.Text = Contenido["txtRevistaVolumen"]
      FMain.txtRevistaNumero.Text = Contenido["txtRevistaNumero"]
      FMain.txtRevistaAnio.Text = Contenido["txtRevistaAnio"]
      FMain.txtRevistaMes.Text = Contenido["txtRevistaMes"]
      FMain.txtRevistaEditor.Text = Contenido["txtRevistaEditor"]
      FMain.txtRevistaEditorial.Text = Contenido["txtRevistaEditorial"]
      FMain.txtRevistaPais.Text = Contenido["txtRevistaPais"]
      FMain.txtRevistaIdioma.Text = Contenido["txtRevistaIdioma"]
      FMain.txtRevistaFrecuencia.Text = Contenido["txtRevistaFrecuencia"]
      FMain.txtRevistaURL.Text = Contenido["txtRevistaURL"]
      FMain.txtRevistaEmail.Text = Contenido["txtRevistaEmail"]
      FMain.txtRevistaISSNPrint.Text = Contenido["txtRevistaISSNPrint"]
      FMain.txtRevistaISSNOnLine.Text = Contenido["txtRevistaISSNOnLine"]
      FMain.txtRevistaTipoAcceso.Text = Contenido["txtRevistaTipoAcceso"]
      FMain.txtRevistaAreaTematica.Text = Contenido["txtRevistaAreaTematica"]
      FMain.txtRevistaIndexadaEn.Text = Contenido["txtRevistaIndexadaEn"]
      FMain.txtRevistaPoliticaEticaURL.Text = Contenido["txtRevistaPoliticaEticaURL"]
      FMain.txtPoliticaRevisoresURL.Text = Contenido["txtPoliticaRevisoresURL"]
      FMain.txtPoliticaOpenAccessURL.Text = Contenido["txtPoliticaOpenAccessURL"]
      FMain.txtFormatoPublicacion.Text = Contenido["txtFormatoPublicacion"]
      FMain.txtRevistaArchivaEn.Text = Contenido["txtRevistaArchivaEn"]
      FMain.txtEditorJefe.Text = Contenido["txtEditorJefe"]
      FMain.txtEditorJefeEmail.Text = Contenido["txtEditorJefeEmail"]
      FMain.txtEditorAsociado.Text = Contenido["txtEditorAsociado"]
      FMain.txtEditorAsociadoEmail.Text = Contenido["txtEditorAsociadoEmail"]
      FMain.txtCoordinadorEditorial.Text = Contenido["txtCoordinadorEditorial"]
      FMain.txtCoordinadorEditorialEmail.Text = Contenido["txtCoordinadorEditorialEmail"]
      FMain.txtFechaRecepcionApertura.Text = Contenido["txtFechaRecepcionApertura"]
      FMain.txtFechaRecepcionCierre.Text = Contenido["txtFechaRecepcionCierre"]
      FMain.txtFechaPublicacion.Text = Contenido["txtFechaPublicacion"]
      FMain.txtFechaProximaEdicion.Text = Contenido["txtFechaProximaEdicion"]
      FMain.txtLicencia.Text = Contenido["txtLicencia"]
      FMain.txtDerechosAutor.Text = Contenido["txtDerechosAutor"]
      FMain.txtDepositarioLegal.Text = Contenido["txtDepositarioLegal"]
    Else
      Message.Info("No hay metadatos cargados para este proyecto.")
    Endif
  Else
    Message.Error("No se encontró el proyecto en la base de datos.")
  Endif

Catch
  Message.Error("Error al cargar metadatos: " & Error.Text)

End

Public Sub GuardarMetadatos()

  Contenido = m_OnOff_y_Red.meConn.Edit("metadatos", "id=" & FMain.idMetadato.Text)

  Contenido!txtImagenTapita = FMain.txtImagenTapita.Text
  Contenido!txtRevistaTitulo = FMain.txtRevistaTitulo.Text
  Contenido!txtRevistaAbreviatura = FMain.txtRevistaAbreviatura.Text
  Contenido!txtRevistaDOIPrefix = FMain.txtRevistaDOIPrefix.Text
  Contenido!txtRevistaISSN = FMain.txtRevistaISSN.Text
  Contenido!txtRevistaVolumen = FMain.txtRevistaVolumen.Text
  Contenido!txtRevistaNumero = FMain.txtRevistaNumero.Text
  Contenido!txtRevistaAnio = FMain.txtRevistaAnio.Text
  Contenido!txtRevistaMes = FMain.txtRevistaMes.Text
  Contenido!txtRevistaEditor = FMain.txtRevistaEditor.Text
  Contenido!txtRevistaEditorial = FMain.txtRevistaEditorial.Text
  Contenido!txtRevistaPais = FMain.txtRevistaPais.Text
  Contenido!txtRevistaIdioma = FMain.txtRevistaIdioma.Text
  Contenido!txtRevistaFrecuencia = FMain.txtRevistaFrecuencia.Text
  Contenido!txtRevistaURL = FMain.txtRevistaURL.Text
  Contenido!txtRevistaEmail = FMain.txtRevistaEmail.Text
  Contenido!txtRevistaISSNPrint = FMain.txtRevistaISSNPrint.Text
  Contenido!txtRevistaISSNOnLine = FMain.txtRevistaISSNOnLine.Text
  Contenido!txtRevistaTipoAcceso = FMain.txtRevistaTipoAcceso.Text
  Contenido!txtRevistaAreaTematica = FMain.txtRevistaAreaTematica.Text
  Contenido!txtRevistaIndexadaEn = FMain.txtRevistaIndexadaEn.Text
  Contenido!txtRevistaPoliticaEticaURL = FMain.txtRevistaPoliticaEticaURL.Text
  Contenido!txtPoliticaRevisoresURL = FMain.txtPoliticaRevisoresURL.Text
  Contenido!txtPoliticaOpenAccessURL = FMain.txtPoliticaOpenAccessURL.Text
  Contenido!txtFormatoPublicacion = FMain.txtFormatoPublicacion.Text
  Contenido!txtRevistaArchivaEn = FMain.txtRevistaArchivaEn.Text
  Contenido!txtEditorJefe = FMain.txtEditorJefe.Text
  Contenido!txtEditorJefeEmail = FMain.txtEditorJefeEmail.Text
  Contenido!txtEditorAsociado = FMain.txtEditorAsociado.Text
  Contenido!txtEditorAsociadoEmail = FMain.txtEditorAsociadoEmail.Text
  Contenido!txtCoordinadorEditorial = FMain.txtCoordinadorEditorial.Text
  Contenido!txtCoordinadorEditorialEmail = FMain.txtCoordinadorEditorialEmail.Text
  Contenido!txtFechaRecepcionApertura = FMain.txtFechaRecepcionApertura.Text
  Contenido!txtFechaRecepcionCierre = FMain.txtFechaRecepcionCierre.Text
  Contenido!txtFechaPublicacion = FMain.txtFechaPublicacion.Text
  Contenido!txtFechaProximaEdicion = FMain.txtFechaProximaEdicion.Text
  Contenido!txtLicencia = FMain.txtLicencia.Text
  Contenido!txtDerechosAutor = FMain.txtDerechosAutor.Text
  Contenido!txtDepositarioLegal = FMain.txtDepositarioLegal.Text

  Message.Info("Cambios guardados correctamente.")
  Contenido.Update
  m_OnOff_y_Red.meConn.Commit()

Catch
  Message.Error("Error al guardar cambios: " & Error.Text)

End
