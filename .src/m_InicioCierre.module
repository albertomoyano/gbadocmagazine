' Gambas module file

Public Sub CerrarTodo()

  ' Borramos carpetas del caché
  FMain.TerminalViewProyecto.Input("rm -rf " & User.Home & "/.local/share/org.gambas.*" & "\n")
  FMain.TerminalViewProyecto.Input("clear" & "\n")
  Wait 0.2

  ' detiene el proceso Bash
  If FMain.$Bash And If FMain.$Bash.State = Process.Running Then
    FMain.$Bash.Kill
    Wait 0.2
    If FMain.$Bash.State = Process.Running Then
      FMain.$Bash.Terminate
      Wait 0.2
      If FMain.$Bash.State = Process.Running Then
        Message.Warning("El proceso no pudo ser detenido.")
      Endif
    Endif
  Endif

  ' Cierra la conexión a la BBDD si existe
  If m_OnOff_y_Red.meConn Then
    m_OnOff_y_Red.meConn.Close()
    m_OnOff_y_Red.meConn = Null
  Endif

  ' Finalmente cerrar formulario principal y salir de la aplicación
  FMain.Close
  Quit

End

Public Sub DirectorioOcultoApp()

  ' Lista de rutas que necesitas verificar/crear
  Dim rutasNecesarias As String[] = [
    User.Home & "/.gbadoc",
    User.Home & "/.gbadoc/xslt"

  ]

  ' Verificar y crear rutas si no existen
  For Each rutaDirSys As String In rutasNecesarias
    If Not Exist(rutaDirSys) Then
      Try Mkdir rutaDirSys  ' ← Intenta crear el directorio
      If Error Then
        Message.Error("Error al intentar crear los directorios del sistema.")' Print "Error al crear directorio: " & rutaDirSys & " (" & Error.Text & ")"
      Endif
    End If
  Next

  'copiamos los archivos de configuracion general
  If Not File.RealPath(User.Home & "/.gbadoc/gbadoc.sqlite") Then
    Message.Info("La base de datos no existe, se creará una vacía.")
    Copy "vacia-gbadoc.sqlite" To User.Home & "/.gbadoc/gbadoc.sqlite"
  End If
  If Not File.RealPath(User.Home & "/.gbadoc/filtro.lua") Then
    Copy "filtro.lua" To User.Home & "/.gbadoc/filtro.lua"
  End If

End
