' Gambas module file

Public Sub CerrarTodo()

  ' Borramos carpetas del caché
  FMain.TerminalViewProyecto.Input("rm -rf " & User.Home & "/.local/share/org.gambas.*" & "\n")
  FMain.TerminalViewProyecto.Input("clear" & "\n")
  Wait 0.2

  ' detiene el proceso Bash
  If FMain.$Bash And If FMain.$Bash.State = Process.Running Then
    FMain.$Bash.Kill
    Wait 0.2
    If FMain.$Bash.State = Process.Running Then
      FMain.$Bash.Terminate
      Wait 0.2
      If FMain.$Bash.State = Process.Running Then
        Message.Warning("El proceso no pudo ser detenido.")
      Endif
    Endif
  Endif

  ' Cierra la conexión a la BBDD si existe
  If m_OnOff_y_Red.meConn Then
    m_OnOff_y_Red.meConn.Close()
    m_OnOff_y_Red.meConn = Null
  Endif

  ' Finalmente cerrar formulario principal y salir de la aplicación
  FMain.Close
  Quit

End

Public Sub DirectorioOcultoApp()

  ' Lista de rutas que necesitas verificar/crear
  Dim rutasNecesarias As String[] = [
    User.Home & "/.gbadoc"

  ]

  ' Verificar y crear rutas si no existen
  For Each rutaDirSys As String In rutasNecesarias
    If Not Exist(rutaDirSys) Then
      Try Mkdir rutaDirSys  ' ← Intenta crear el directorio
      If Error Then
        Message.Error("Error al intentar crear los directorios del sistema.")' Print "Error al crear directorio: " & rutaDirSys & " (" & Error.Text & ")"
      Else
        Print "Directorio creado: " & rutaDirSys
      Endif
    End If
  Next

End

Public Sub VerificarYAgregarProyecto(sRutaArchivo As String)

  Dim sNombreArchivo As String
  Dim rConsulta As Result
  Dim sSQL As String
  Dim iIDProyecto As Integer

  ' Asegurar conexión activa
  If Not m_OnOff_y_Red.meConn Or If m_OnOff_y_Red.meConn.Opened = False Then
    m_OnOff_y_Red.OnRed()
  Endif

  ' Obtener nombre del archivo sin extensión
  sNombreArchivo = File.BaseName(sRutaArchivo)

  ' Verificar si ya existe
  sSQL = "SELECT id FROM proyectos WHERE nombre_archivo = &1"
  rConsulta = m_OnOff_y_Red.meConn.Exec(sSQL, sNombreArchivo)

  If rConsulta.Available Then
    Message.Info("El archivo '" & sNombreArchivo & "' ya está registrado.")
  Else
    ' Insertar en proyectos
    sSQL = "INSERT INTO proyectos (nombre_archivo) VALUES (&1)"
    m_OnOff_y_Red.meConn.Exec(sSQL, sNombreArchivo)

    ' Obtener ID del nuevo proyecto
    rConsulta = m_OnOff_y_Red.meConn.Exec("SELECT last_insert_rowid() AS ultimo_id")
    If rConsulta.Available Then
      iIDProyecto = rConsulta["ultimo_id"]

      ' Insertar en metadatos (relación 1 a 1)
      sSQL = "INSERT INTO metadatos (id_proyecto) VALUES (&1)"
      m_OnOff_y_Red.meConn.Exec(sSQL, iIDProyecto)

      Message.Info("Proyecto registrado con metadatos iniciales.")
    Else
      Message.Error("No se pudo obtener el ID del nuevo proyecto.")
    Endif
  Endif

Catch
  Message.Error("Error al registrar el proyecto: " & Error.Text)

End

Public Sub CargarMetadatosDesdeArchivo(sRutaArchivo As String)

  Dim sNombreArchivo As String
  Dim rConsulta As Result
  Dim iIDProyecto As Integer
  Dim sSQL As String

  If Not m_OnOff_y_Red.meConn Or If m_OnOff_y_Red.meConn.Opened = False Then
    m_OnOff_y_Red.OnRed()
  Endif

  sNombreArchivo = File.BaseName(sRutaArchivo)

  ' Buscar el proyecto por nombre
  sSQL = "SELECT id FROM proyectos WHERE nombre_archivo = &1"
  rConsulta = m_OnOff_y_Red.meConn.Exec(sSQL, sNombreArchivo)

  If rConsulta.Available Then
    iIDProyecto = rConsulta["id"]

    ' Ahora buscar los metadatos relacionados
    sSQL = "SELECT * FROM metadatos WHERE id_proyecto = &1"
    rConsulta = m_OnOff_y_Red.meConn.Exec(sSQL, iIDProyecto)

    If rConsulta.Available Then
      ' Asignar a los TextBox del formulario
      FMain.txtRevistaTitulo.Text = rConsulta["revista_titulo"]
      FMain.txtRevistaISSN.Text = rConsulta["revista_issn"]
      FMain.txtRevistaVolumen.Text = rConsulta["revista_volumen"]
      FMain.txtRevistaNumero.Text = rConsulta["revista_numero"]
    Else
      Message.Info("No hay metadatos cargados para este proyecto.")
    Endif
  Else
    Message.Error("No se encontró el proyecto en la base de datos.")
  Endif

Catch
  Message.Error("Error al cargar metadatos: " & Error.Text)

End
