' Gambas module file

Private NombreProyecto As String = File.BaseName(FMain.txtProyecto.Text)
Private RutaProyecto As String = File.Dir(FMain.txtProyecto.Text)

'exportamos el archivo bibtex
Public Sub ExportarBibTeX()

  Dim s As String
  Dim f As ResultField
  Dim aFields As New String[]
  Dim i As Integer
  Dim w As Integer
  Dim tab As String

  Dim outputFile As String
  Dim fecha As String
  Dim HOY As Date

  Dim sResultado As Result
  Dim filtrarBib As String

  'me aseguro de que la búsqueda se encuentre entre comas
  filtrarBib = "select * from bibtex where id_revista = " & FMain.idMetadatoRevista.Text
  sResultado = m_OnOff_y_Red.meConn.Exec(filtrarBib)

  aFields.Clear
  For Each f In sResultado.Fields
    aFields.Add(f.Name)
    If Len(f.Name) > w Then
      w = Len(f.Name)
    Endif
  Next

  s = "" ' Inicializa la cadena vacía

  While sResultado.Available
    s &= "\n@" & sResultado["cmbTipoDeEntrada"] & "{" & sResultado[aFields[5]] & ",\n"
    For i = 6 To aFields.Max
      tab = ""
      If Len(aFields[i]) / i < w Then
        tab = String(w - Len(aFields[i]), " ")
      Endif
      If Not IsNull(sResultado[aFields[i]]) And Len(sResultado[aFields[i]]) > 0 Then
        s &= aFields[i] & tab & " = {" & sResultado[aFields[i]] & "},\n"
      Endif
    Next
    s &= "}"
    sResultado.MoveNext
  Wend

  ' Realiza los reemplazos
  s = Replace(s, ",}", "}")
  s = Replace(s, "txtAuthor", "author ")
  s = Replace(s, "txtEditor", "editor ")
  s = Replace(s, "txtTitle", "title ")

  HOY = Date
  fecha = (Format(HOY, "dd/mm/yyyy"))

  ' Establece la ruta y el nombre del archivo de salida
  ' Guarda el contenido acumulado en un solo archivo
  s &= "\n\n@Comment{generado con gbadocmagazine; databaseType:biblatex; fecha de creación: " & fecha & ";}"
  outputFile = RutaProyecto & "/files/" & NombreProyecto & ".bib"
  File.Save(outputFile, s)

End
