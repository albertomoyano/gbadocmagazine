' Gambas class file

Private contenido As String
Private hFile As File

Public Sub Form_Open()

  Dim fecha As String

  fecha = Format(Date(), "yymmdd") ' Obtener la fecha actual

  txtFecha.Text = fecha

End

Public Sub btnBuscar_Click()

  Dialog.Title = "Seleccionar archivo"
  Dialog.Filter = ["*.docx", ("Archivos word"), ("Todos los archivos")]
  Dialog.AutoExt = True
  Dialog.Path = User.Home
  If Dialog.OpenFile() Then
    Return
  Else
    If Not Exist(File.Dir(Dialog.Path) & "/media") Then
      Mkdir File.Dir(Dialog.Path) & "/media"
    End If
    txtArchivoOrigen.Text = Dialog.Path
    btnCONVERTIR.Enabled = True
  Endif
Catch
  Message.Error("No se pudo abrir el archivo")

End

Public Sub Form_Close()

  Me.Close()

End

Public Sub btnSalir_Click()

  Me.Close()

End

Public Sub btnListo_Click()

  Me.Close()

End

Public Sub btnCONVERTIR_Click()

  txtArchivoOrigen.Text = Dialog.Path
  Dim rutaOrigen As String = txtArchivoOrigen.Text

  ' Validación del campo destino
  If Trim(txtArchivoDestino.Text) = "" Then
    Message.Error("El campo de Destino no puede estar vacío", "Cancelar")
    Return
  Endif

  ' Configuración de rutas
  Dim rutaFILTROLUA As String = Quote$(User.Home & "/.gbadoc/filtro.lua")
  Dim mediaDir As String = Quote$(File.Dir(rutaOrigen) & "/media")
  Dim archivoFinal As String = Quote$(File.Dir(rutaOrigen) & "/" & txtFecha.Text & txtArchivoDestino.Text & ".adoc")

  ' Ejecutar pandoc
  Shell "pandoc " & Quote$(rutaOrigen) & " -o " & archivoFinal & " --lua-filter=" & rutaFILTROLUA & " --from=docx --to=adoc --wrap=none --extract-media=" & mediaDir Wait

  ' Ruta base sin comillas para operaciones de archivo
  Dim rutaBase As String = File.Dir(rutaOrigen) & "/" & txtFecha.Text & txtArchivoDestino.Text & ".adoc"

  ' Verificar si el archivo se generó correctamente
  If Not Exist(rutaBase) Then
    Message.Error("El archivo no se pudo generar")
    Return
  Endif

  ' Cargar contenido del archivo generado
  contenido = File.Load(rutaBase)
  If Error Then
    Message.Error("Error al leer el archivo generado: " & Error.Text)
    Return
  Endif

  ' Reescribir el archivo con cabecera y pie
  hFile = Open rutaBase For Write
  If Error Then
    Message.Error("Error al abrir el archivo para escribir: " & Error.Text)
    Return
  Endif

  ' ' Escribir cabecera
  ' Print #hFile, "%  archivo con cabecera para libros, compilar con LuaLaTeX"
  ' Print #hFile, "%  esta cabecera debe borrarse para trabajar con gbtexpublisher"
  ' Print #hFile, ""
  ' Print #hFile, "\\documentclass{book}"
  ' Print #hFile, "\\usepackage[spanish]{babel}"
  ' Print #hFile, "\\usepackage{fontspec}"
  ' Print #hFile, "\\setmainfont{Libertinus Serif}"
  ' Print #hFile, "\\usepackage{graphicx}"
  ' Print #hFile, "\\usepackage{xcolor}"
  ' Print #hFile, "\\usepackage{longtable}"
  ' Print #hFile, "\\usepackage{caption}"
  ' Print #hFile, "\\usepackage{hyperref}"
  ' Print #hFile, ""
  ' Print #hFile, "\\begin{document}"
  ' Print #hFile, "\\frontmatter"
  ' Print #hFile, ""
  '
  ' ' Escribir contenido original
  ' Print #hFile, contenido
  '
  ' ' Escribir pie
  ' Print #hFile, ""
  ' Print #hFile, "\\end{document}"
  '
  ' Close #hFile
  ' If Error Then
  '   Message.Error("Error al escribir el archivo: " & Error.Text)
  '   Return
  ' Endif

  ' Actualizar interfaz
  btnListo.Visible = True
  btnListo.Default = True
  btnSalir.Visible = False

End Sub

Public Sub txtArchivoDestino_KeyRelease()
  ' Obtener el texto actual del TextBox

  Dim texto As String

  texto = txtArchivoDestino.Text

  ' Lista de caracteres permitidos
  Dim caracteresPermitidos As String = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"

  ' Filtrar el texto para eliminar caracteres no permitidos
  Dim textoFiltrado As String
  For i As Integer = 1 To Len(texto)
    Dim tecla As String
    tecla = Mid(texto, i, 1)
    If InStr(caracteresPermitidos, tecla) > 0 Then
      textoFiltrado = textoFiltrado & tecla
    End If
  Next

  ' Limitar la longitud del texto a 12 caracteres
  If Len(textoFiltrado) > 12 Then
    ' Mostrar un mensaje de aviso
    Message.Warning("El nombre de salida del archivo no puede contener más de 12 caracteres.", "Entendido")
    ' Eliminar los caracteres adicionales
    txtArchivoDestino.Text = Left(textoFiltrado, 12)
  Else
    ' Actualizar el TextBox con el texto filtrado y convertirlo a mayúsculas
    txtArchivoDestino.Text = UCase(textoFiltrado)
  End If

End
