' Gambas class file

Private contenido As String
Private hFile As File

Public Sub Form_Open()

  Dim fecha As String

  fecha = Format(Date(), "yymmdd") ' Obtener la fecha actual

  txtFecha.Text = fecha

End

Public Sub btnBuscar_Click()

  Dialog.Title = "Seleccionar archivo"
  Dialog.Filter = ["*.docx", ("Archivos word"), ("Todos los archivos")]
  Dialog.AutoExt = True
  Dialog.Path = User.Home
  If Dialog.OpenFile() Then
    Return
  Else
    If Not Exist(File.Dir(Dialog.Path) & "/media") Then
      Mkdir File.Dir(Dialog.Path) & "/media"
    End If
    txtArchivoOrigen.Text = Dialog.Path
    btnCONVERTIR.Enabled = True
  Endif
Catch
  Message.Error("No se pudo abrir el archivo")

End

Public Sub Form_Close()

  Me.Close()

End

Public Sub btnSalir_Click()

  Me.Close()

End

Public Sub btnListo_Click()

  Me.Close()

End

Public Sub btnCONVERTIR_Click()

  txtArchivoOrigen.Text = Dialog.Path
  Dim rutaOrigen As String = txtArchivoOrigen.Text

  ' Validación del campo destino
  If Trim(txtArchivoDestino.Text) = "" Then
    Message.Error("El campo de Destino no puede estar vacío", "Cancelar")
    Return
  Endif

  ' Configuración de rutas
  Dim rutaFILTROLUA As String = Quote$(User.Home & "/.gbadoc/filtro.lua")
  Dim mediaDir As String = Quote$(File.Dir(rutaOrigen) & "/media")
  Dim archivoFinal As String = Quote$(File.Dir(rutaOrigen) & "/" & txtFecha.Text & txtArchivoDestino.Text & ".md")

  ' Ejecutar pandoc
  Shell "pandoc " & Quote$(rutaOrigen) & " -o " & archivoFinal & " --lua-filter=" & rutaFILTROLUA & " --from=docx --to=md --wrap=none --extract-media=" & mediaDir Wait

  ' Ruta base sin comillas para operaciones de archivo
  Dim rutaBase As String = File.Dir(rutaOrigen) & "/" & txtFecha.Text & txtArchivoDestino.Text & ".md"

  ' Verificar si el archivo se generó correctamente
  If Not Exist(rutaBase) Then
    Message.Error("El archivo no se pudo generar")
    Return
  Endif

  ' Cargar contenido del archivo generado
  contenido = File.Load(rutaBase)
  If Error Then
    Message.Error("Error al leer el archivo generado: " & Error.Text)
    Return
  Endif

  ' Reescribir el archivo con cabecera y pie
  hFile = Open rutaBase For Write
  If Error Then
    Message.Error("Error al abrir el archivo para escribir: " & Error.Text)
    Return
  Endif

  ' Actualizar interfaz
  btnListo.Visible = True
  btnListo.Default = True
  btnSalir.Visible = False

End Sub

Public Sub txtArchivoDestino_KeyPress()

  ' Permitir teclas de control
  If Key.Code = Key.BackSpace Or Key.Code = Key.Delete Or
      Key.Code = Key.Left Or Key.Code = Key.Right Or
      Key.Code = Key.Tab Or Key.Code = Key.Enter Or
      Key.Code = Key.Home Or Key.Code = Key.End Then
    Return
  Endif

  ' Solo permitir letras minúsculas o mayúsculas (a-z, A-Z)
  If (Key.Text < "A" Or (Key.Text > "Z" And Key.Text < "a") Or Key.Text > "z") Then
    Stop Event
  Endif

End

Public Sub txtArchivoDestino_KeyRelease()

  Dim texto As String = UCase(txtArchivoDestino.Text)

  If Len(texto) > 12 Then
    texto = Left(texto, 12)
    Message.Warning("El nombre del archivo no puede tener más de 12 caracteres.")
  Endif

  txtArchivoDestino.Text = texto

End
